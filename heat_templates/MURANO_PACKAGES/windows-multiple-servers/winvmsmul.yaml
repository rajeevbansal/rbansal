heat_template_version: 2013-05-23

description: |
  Heat Orchestration Template that spins up a resource group with multiple cloud servers.

parameters:
  image:
    type: string
    description: Please type image name or ID
    default: Please type SNAPSHOT ID
  instance_name:
    type: string
    default: Please type INSTANCE NAME
  flavor:
    type: string
    default: m1.large
    constraints:
      - allowed_values: [ m1.xlarge, m1.medium, m1.small, m1.4xlarge, m1.2xlarge, m1.large  ]
  public_net_id:
    type: string
    default: Please type PUBLIC NETWORK ID or NAME
  private_network:
    type: string
    default: Please type PRIVATE NETWORK ID or NAME
  private_subnet:
    type: string
    default: Please type PRIVATE SUB-NETWORK ID or NAME
  vol_size:
    type: string
    default: 50


resources:
  my_nodes:
    type: OS::Nova::Server
    properties:
      block_device_mapping:
        - device_name: vda
          delete_on_termination: true
          volume_id: { get_resource: volume }
      name: { get_param: instance_name }
      flavor: { get_param: flavor }
      networks: 
        - port: { get_resource: instance1_port }
      user_data:
        str_replace:
             params:
                __private_network__: { get_param: private_network }
                __flavor__: { get_param: flavor }
                __public_net_id__ : {get_param: public_net_id }
                __private_subnet__ : {get_param : private_subnet }
             template : |
               #ps1
               sysprep  /oobe /generalize /reboot
               mkdir c:\tenant
               echo "Priavte Network __private_network__ Flavor __flavor__ Key __key__ Public Net Id __public_net_id__ Image __image__ Private Subnet __private_subnet__" >> c:\tenant\tenant_info.txt

  volume:
    type: OS::Cinder::Volume
    properties:
      image : { get_param: image  }
      size: { get_param: vol_size }

  instance1_port:
     type: OS::Neutron::Port
     properties:
       network_id: { get_param: private_network }
       fixed_ips:
         - subnet_id: { get_param: private_subnet }
       security_groups: [{get_resource: server_security_group }]
  instance1_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: instance1_port }

  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for server
      name: windows-default-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
